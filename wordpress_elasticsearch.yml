apiVersion: v1
kind: ReplicationController
metadata:
  name: $APP_NAME|default:wordpress| Enter your application name$
kuberdock:
  packageID: 0
  preDescription: |
    You are installing the application [b]WordPress with ElasticSearch[/b].
    The WordPress rich content management system can utilize plugins, widgets, and themes.
    All the components needed for this application correct work will also be installed: [b]MySQL[/b] server, ElasticSearch server.
    Choose the amount of resources or use recommended parameters set by default.
    First choose package.
    When you click "Order now", you will get to order processing page.
  postDescription: |
    You have installed [b]WordPress with ElasticSearch![/b]
    To access [b]WordPress[/b] use this link: [url]http://%PUBLIC_ADDRESS%[/url]

  # required for cPanel to do proxy to user`s domain
  # proxy:
    # root:
      # container: wordpress
      # domain: $APP_DOMAIN|default:user_domain_list|Select application domain$
  appPackages:
    - name: S
      goodFor: beginning
      publicIP: true
      pods:
        -
          name: $APP_NAME$
          kubeType: 1
          containers:
            - name: mysql
              kubes: 3
            - name: wordpress
              kubes: 2
            - name: elastic
              kubes: 3
          persistentDisks:
            - name: mysql-persistent-storage
              pdSize: 1
            - name: wordpress-persistent-storage
              pdSize: 1
            - name: elastic-persistent-storage
              pdSize: 1
    - name: M
      recommended: yes
      goodFor: regular use
      publicIP: true
      pods:
        -
          name: $APP_NAME$
          kubeType: 1
          containers:
            - name: mysql
              kubes: 6
            - name: wordpress
              kubes: 4
            - name: elastic
              kubes: 6
          persistentDisks:
            - name: mysql-persistent-storage
              pdSize: 1
            - name: wordpress-persistent-storage
              pdSize: 1
            - name: elastic-persistent-storage
              pdSize: 1
    - name: L
      goodFor: business
      publicIP: true
      pods:
        -
          name: $APP_NAME$
          kubeType: 2
          containers:
            - name: mysql
              kubes: 4
            - name: wordpress
              kubes: 2
            - name: elastic
              kubes: 4
          persistentDisks:
            - name: mysql-persistent-storage
              pdSize: 2
            - name: wordpress-persistent-storage
              pdSize: 2
            - name: elastic-persistent-storage
              pdSize: 2
spec:
  template:
    metadata:
      labels:
        name: $APP_NAME$
    spec:
      volumes:
        - name: mysql-persistent-storage
          persistentDisk:
            pdName: wordpress_mysql_$PD_RAND|default:autogen|PD rand$
        - name: wordpress-persistent-storage
          persistentDisk:
            pdName: wordpress_www_$PD_RAND$
        - name: elastic-persistent-storage
          persistentDisk:
            pdName: wordpress_elastic_$PD_RAND$
      restartPolicy: "Always"
      containers:
        -
          name: mysql
          image: mysql:5
          env:
            - name: MYSQL_DATABASE
              value: wordpress
            - name: MYSQL_USER
              value: wordpress
            - name: MYSQL_PASSWORD
              value: $MYSQL_USER_PASSWORD|default:autogen|mysql password$
            - name: MYSQL_ROOT_PASSWORD
              value: $MYSQL_ROOT_PASSWORD|default:autogen|mysql password$
          ports:
            - containerPort: 3306
          volumeMounts:
            - mountPath: /var/lib/mysql
              name: mysql-persistent-storage
        -
          name: wordpress
          image: wordpress:4
          env:
            - name: WORDPRESS_DB_USER
              value: wordpress
            - name: WORDPRESS_DB_PASSWORD
              value: $MYSQL_USER_PASSWORD$
            - name: WORDPRESS_DB_HOST
              value: 127.0.0.1
          ports:
            - containerPort: 80
              isPublic: True
          volumeMounts:
            - mountPath: /var/www/html
              name: wordpress-persistent-storage
          workingDir: /var/www/html
        - name: elastic
          image: elasticsearch:1.7.3
          ports:
            - containerPort: 9200
              isPublic: False
            - containerPort: 9300
              isPublic: False
          volumeMounts:
            - mountPath: /usr/share/elasticsearch/data
              name: elastic-persistent-storage
